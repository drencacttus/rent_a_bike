/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import model.Admin;
import model.Bike;
import model.BikeType;
import model.Client;
import model.DB;

/**
 *
 * @author CacTrainer
 */
public class LeaseWindow extends javax.swing.JFrame {

    /**
     * Creates new form LeaseWindow
     */
    public LeaseWindow() {
        initComponents();
        loadFields();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPersonalNumber = new javax.swing.JLabel();
        txtPersonalNumber = new javax.swing.JTextField();
        cmbBike = new javax.swing.JComboBox<>();
        cmbBikeType = new javax.swing.JComboBox<>();
        lblBikeType = new javax.swing.JLabel();
        lblBike = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        lblColorLabel = new javax.swing.JLabel();
        lblColor = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lease bike");
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);

        lblPersonalNumber.setText("Personal Number:");

        lblBikeType.setText("Bike type:");
        lblBikeType.setToolTipText("");

        lblBike.setText("Bike:");

        btnSave.setText("Save");
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
        });

        lblColorLabel.setText("Color:");

        lblColor.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblColor.setText("--");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblColorLabel)
                    .addComponent(lblPersonalNumber)
                    .addComponent(lblBikeType)
                    .addComponent(lblBike))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSave)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtPersonalNumber)
                        .addComponent(cmbBikeType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmbBike, 0, 151, Short.MAX_VALUE))
                    .addComponent(lblColor))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPersonalNumber)
                    .addComponent(txtPersonalNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbBikeType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBikeType))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbBike, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBike))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblColorLabel)
                    .addComponent(lblColor))
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
        
        save(txtPersonalNumber.getText());
    }//GEN-LAST:event_btnSaveMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LeaseWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LeaseWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LeaseWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LeaseWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LeaseWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cmbBike;
    private javax.swing.JComboBox<String> cmbBikeType;
    private javax.swing.JLabel lblBike;
    private javax.swing.JLabel lblBikeType;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblColorLabel;
    private javax.swing.JLabel lblPersonalNumber;
    private javax.swing.JTextField txtPersonalNumber;
    // End of variables declaration//GEN-END:variables

    private Admin admin;

    public void setAdmin(Admin admin) {
        this.admin = admin;
    }
    
    private void loadFields() {
    
        try {
            
            ArrayList<BikeType> bikeTypes = DB.getBikeTypes();
            DefaultComboBoxModel dcbm = new DefaultComboBoxModel();
            
            for(BikeType bikeType : bikeTypes) {
            
                dcbm.addElement(bikeType);
            }
            
            cmbBikeType.setModel(dcbm);
            cmbBikeType.setSelectedIndex(-1);
            
            cmbBikeType.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                
                    bikeTypeSelected((BikeType)cmbBikeType.getSelectedItem());
                }
            });
        } 
        catch (SQLException ex) {
            
            JOptionPane.showMessageDialog(null, "Failed to load bike types", "Server error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void bikeTypeSelected(BikeType bikeType) {
    
        try {
            ArrayList<Bike> freeBikes = DB.getFreeBikes();
            DefaultComboBoxModel dcbm = new DefaultComboBoxModel();
            
            for(Bike bike : freeBikes) {
            
                if(bike.getTypeId() == bikeType.getId()) {
                
                    dcbm.addElement(bike);
                }
            }
            
            cmbBike.setModel(dcbm);
            
            cmbBike.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    
                    Bike selectedBike = (Bike)cmbBike.getSelectedItem();
                    lblColor.setText(selectedBike.getColor());
                }
            });
            
            Bike selectedBike = (Bike)cmbBike.getSelectedItem();
            lblColor.setText(selectedBike.getColor());
        } 
        catch (SQLException ex) {
            
            JOptionPane.showMessageDialog(null, "Failed to load bikes", "Server error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void save(String personalNumber) {
    
        boolean personalNumberOK = personalNumber.matches("[0-9]{10}");
        
        if(personalNumberOK) {
        
            if(cmbBike.getSelectedIndex() != -1) {
            
                Bike selectedBike = (Bike)cmbBike.getSelectedItem();
                
                try{
                    
                    selectedBike.setStatus(true);
                    Client.add(personalNumber, selectedBike.getId(), admin.getId());
                    JOptionPane.showMessageDialog(null, "Client successfully added", "Success", JOptionPane.INFORMATION_MESSAGE);
                    setVisible(false);
                }
                catch (SQLException e) {
                
                    JOptionPane.showMessageDialog(null, "Failed to add client", "Server error", JOptionPane.ERROR_MESSAGE);
                }
            }
            else {
            
                JOptionPane.showMessageDialog(null, "Please select a bike!", "Input error", JOptionPane.ERROR_MESSAGE);
            }
        }
        else {
        
            JOptionPane.showMessageDialog(null, "Invalid personal number", "Input error", JOptionPane.ERROR_MESSAGE);
        }
    }
}
